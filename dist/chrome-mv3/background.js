var background=function(){"use strict";var B=Object.defineProperty;var D=(c,i,s)=>i in c?B(c,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):c[i]=s;var m=(c,i,s)=>D(c,typeof i!="symbol"?i+"":i,s);var G,A;function c(t){return t==null||typeof t=="function"?{main:t}:t}const s=(A=(G=globalThis.browser)==null?void 0:G.runtime)!=null&&A.id?globalThis.browser:globalThis.chrome,f="xswitch_groups",p="xswitch_global_enabled",v=()=>typeof importScripts=="function"||typeof window>"u",E=()=>(console.log("üîç Detecting storage API... Environment:",JSON.stringify({isServiceWorker:v(),hasBrowser:typeof s<"u",hasChrome:!1,hasLocalStorage:typeof localStorage<"u"})),typeof s<"u"&&s.storage&&s.storage.local?(console.log("‚úÖ Using browser.storage.local API"),{get:t=>s.storage.local.get(t),set:t=>s.storage.local.set(t),remove:t=>s.storage.local.remove(t),clear:()=>s.storage.local.clear(),onChanged:s.storage.onChanged}):(console.log("‚ùå No extension storage API available"),null)),I=()=>{const t=[],e=(r,a,o)=>{const n={[r]:{oldValue:a,newValue:o}};console.log(`üîî Notifying ${t.length} listeners of change:`,JSON.stringify(n)),t.forEach((l,d)=>{try{console.log(`üîî Calling listener ${d+1}/${t.length}`),l(n,"local")}catch(k){console.error(`‚ùå Error in storage change listener ${d+1}:`,k)}})};return{async get(r){const a={};for(const o of r){const n=localStorage.getItem(o);if(n!==null)try{a[o]=JSON.parse(n)}catch{a[o]=n}}return a},async set(r){console.log("üìù localStorage.set() called:",JSON.stringify(r));for(const[a,o]of Object.entries(r)){const n=localStorage.getItem(a),l=n?JSON.parse(n):void 0;console.log(`üìù Setting localStorage[${a}]:`,JSON.stringify({oldValue:l,newValue:o})),localStorage.setItem(a,JSON.stringify(o)),console.log(`üì° Notifying change for key: ${a}`),e(a,l,o)}},async remove(r){for(const a of r){const o=localStorage.getItem(a),n=o?JSON.parse(o):void 0;localStorage.removeItem(a),e(a,n,void 0)}},async clear(){localStorage.clear()},onChanged:{addListener(r){console.log(`üëÇ Adding storage change listener (total: ${t.length+1})`),t.push(r)}}}},u=class u{constructor(){m(this,"storageAPI");const e=E();if(e)this.storageAPI=e;else if(!v())console.log("‚ö†Ô∏è Using localStorage fallback (not in service worker)"),this.storageAPI=I();else throw new Error("Extension storage API not available in service worker environment")}static getInstance(){return u.instance||(u.instance=new u),u.instance}async saveGroups(e){await this.storageAPI.set({[f]:e})}async loadGroups(){return(await this.storageAPI.get([f]))[f]||[]}async saveGlobalEnabled(e){await this.storageAPI.set({[p]:e})}async loadGlobalEnabled(){return(await this.storageAPI.get([p]))[p]??!0}async getGroup(e){return(await this.loadGroups()).find(a=>a.id===e)||null}async saveGroup(e){const r=await this.loadGroups(),a=r.findIndex(o=>o.id===e.id);a>=0?r[a]=e:r.push(e),await this.saveGroups(r)}async deleteGroup(e){const a=(await this.loadGroups()).filter(o=>o.id!==e);await this.saveGroups(a)}async createGroup(e,r="{}"){const a={id:Date.now().toString(),groupName:e,enabled:!0,ruleText:r,createTime:new Date().toISOString(),updateTime:new Date().toISOString()};return await this.saveGroup(a),a}async toggleGroupEnabled(e){const r=await this.loadGroups(),a=r.find(o=>o.id===e);if(!a)throw new Error("Group not found");return a.enabled=!a.enabled,await this.saveGroups(r),a.enabled}async exportData(){const e=await this.loadGroups(),r=await this.loadGlobalEnabled();return JSON.stringify({groups:e,globalEnabled:r,exportedAt:new Date().toISOString()},null,2)}async importData(e){try{const r=JSON.parse(e);r.groups&&Array.isArray(r.groups)&&await this.saveGroups(r.groups),typeof r.globalEnabled=="boolean"&&await this.saveGlobalEnabled(r.globalEnabled)}catch(r){throw console.error("Failed to import data:",r),new Error("Invalid import data format")}}async clearAll(){await this.storageAPI.remove([f,p])}onStorageChanged(e){this.storageAPI.onChanged&&this.storageAPI.onChanged.addListener((r,a)=>{a==="local"&&e(r)})}};m(u,"instance");let y=u;const g=y.getInstance(),b={async saveGroups(t){try{return await g.saveGroups(t),{success:!0}}catch(e){return console.error("Failed to save groups:",e),{success:!1,message:e instanceof Error?e.message:"‰øùÂ≠òÂ§±Ë¥•"}}},async loadGroups(){try{return await g.loadGroups()}catch(t){return console.error("Failed to load groups:",t),[]}},async saveGlobalEnabled(t){try{return await g.saveGlobalEnabled(t),{success:!0}}catch(e){return console.error("Failed to save global enabled state:",e),{success:!1,message:e instanceof Error?e.message:"‰øùÂ≠òÂ§±Ë¥•"}}},async loadGlobalEnabled(){try{return await g.loadGlobalEnabled()}catch(t){return console.error("Failed to load global enabled state:",t),!0}},async exportData(){return g.exportData()},async importData(t){try{return await g.importData(t),{success:!0}}catch(e){return{success:!1,message:e instanceof Error?e.message:"ÂØºÂÖ•Â§±Ë¥•"}}},onStorageChanged(t){g.onStorageChanged(t)}},S=t=>{const e=t.trim();try{return JSON.parse(e)}catch{}let r=e;return r=O(r),r=J(r),JSON.parse(r)};function O(t){let e="",r=!1,a="",o=0;for(;o<t.length;){const n=t[o],l=t[o+1]||"",d=o>0?t[o-1]:"";if(!r&&(n==='"'||n==="'")){r=!0,a=n,e+=n,o++;continue}if(r){n===a&&d!=="\\"&&(r=!1,a=""),e+=n,o++;continue}if(n==="/"&&l==="/"){for(;o<t.length&&t[o]!==`
`&&t[o]!=="\r";)o++;o<t.length&&(t[o]===`
`||t[o]==="\r")&&(e+=t[o],o++);continue}if(n==="/"&&l==="*"){for(o+=2;o<t.length-1;){if(t[o]==="*"&&t[o+1]==="/"){o+=2;break}o++}continue}e+=n,o++}return e}function J(t){let e=t;return e=e.replace(/,(\s*[\]\}])/g,"$1"),e=e.replace(/([\[\{]\s*),+/g,"$1"),e=e.replace(/,+/g,","),e=e.replace(/\r\n/g,`
`).replace(/\r/g,`
`).replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/g,"").trim(),e}const N=t=>{if(!t.trim())return{isValid:!0};try{return S(t),{isValid:!0}}catch(e){return{isValid:!1,error:e instanceof Error?e.message:"Êú™Áü•ÁöÑJSONÊ†ºÂºèÈîôËØØ"}}},P=t=>{if(!t.trim())return 0;try{const e=S(t);let r=0;return e.proxy&&Array.isArray(e.proxy)&&(r+=e.proxy.length),e.cors&&Array.isArray(e.cors)&&(r+=e.cors.length),r}catch{return 0}},x=c(()=>{console.log("üöÄ XSwitch V3 background script started",JSON.stringify({id:s.runtime.id})),t(),b.onStorageChanged(o=>{console.log("üì¶ Storage changed, updating badge:",JSON.stringify(o)),e()}),typeof s<"u"&&s.runtime&&s.runtime.onMessage.addListener((o,n,l)=>{o.type==="UPDATE_BADGE"&&(console.log("üì® Received UPDATE_BADGE message from popup:",JSON.stringify(o)),e(),l({success:!0}))});async function t(){await e()}async function e(){try{console.log("üîÑ Badge update started...");const[o,n]=await Promise.all([b.loadGroups(),b.loadGlobalEnabled()]);if(console.log("üìä Badge update data:",JSON.stringify({groups:o.length,globalEnabled:n,enabledGroups:o.filter(d=>d.enabled).length})),!n){console.log("üî¥ Setting badge to OFF (global disabled)"),a("OFF","#ff4d4f");return}const l=r(o);console.log("Total active rules:",l),l>0?(console.log(`üü¢ Setting badge to ${l} (active rules)`),a(l.toString(),"#52c41a")):(console.log("üü° Setting badge to 0 (no active rules)"),a("0","#faad14"))}catch(o){console.error("Failed to update badge:",o),a("ERR","#ff4d4f")}}function r(o){let n=0;return o.forEach(l=>{!l.enabled||!N(l.ruleText).isValid||(n+=P(l.ruleText))}),n}function a(o,n){console.log("üéØ setBadge called:",JSON.stringify({text:o,color:n}));try{typeof s<"u"&&s.action?(console.log("üåê Using browser.action API"),s.action.setBadgeText({text:o}),s.action.setBadgeBackgroundColor({color:n}),console.log("‚úÖ Badge set successfully via browser.action")):console.warn("‚ö†Ô∏è No badge API available")}catch(l){console.error("‚ùå Failed to set badge:",l)}}});function F(){}function h(t,...e){}const C={debug:(...t)=>h(console.debug,...t),log:(...t)=>h(console.log,...t),warn:(...t)=>h(console.warn,...t),error:(...t)=>h(console.error,...t)};let w;try{w=x.main(),w instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(t){throw C.error("The background crashed on startup!"),t}return w}();
background;
